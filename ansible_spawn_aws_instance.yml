  - name: Spawn AWS EC2 instance
    hosts: local
    connection: local
    gather_facts: False
    vars:
      instance_type: t2.micro
      # create this first in the AWS console
      security_group: Ansible_Weatherapp
      # images are specific to regions
      image: ami-cc7066a8
      region: eu-west-2
      count: 1
      keypair: weatherapp_key
      keyname: weatherapp_key
      
    tasks:
      - name: Generate a key  
        ec2_key:
        # generate and upload a key, if it doesnt exist
          region: "{{ region }}"
          name: "{{ keyname }}"
        register: keypair_reg
        
      - name: Save key locally
        copy:
        # save the key locally to access it on other playbooks
          content: "{{ keypair_reg.key.private_key }}" 
          dest: "~/.ssh/{{ keyname }}.pem" 
          mode: 0600
        when: keypair_reg.changed

      - name: Create security group
        local_action: 
            module: ec2_group
            name: "{{ security_group }}"
            description: weatherapp_security_group
            region: "{{ region }}"
            # define security rules for the instance
            rules:
              - proto: tcp
                from_port: 22
                to_port: 22
                cidr_ip: 0.0.0.0/0
              - proto: tcp
                from_port: 8000
                to_port: 8000
                cidr_ip: 0.0.0.0/0
              - proto: tcp
                from_port: 443
                to_port: 443
                cidr_ip: 0.0.0.0/0
            rules_egress:
              - proto: all
                cidr_ip: 0.0.0.0/0
        register: basic_firewall
          
      - name: Launch instance
        local_action: ec2
                group={{ security_group }}
                instance_type={{ instance_type }}
                image={{ image }}
                keypair={{ keypair }}
                wait=true
                region={{ region }}
                count={{ count }}
        register: ec2
          
      # save the instance IP to hosts file
      - name: Add instance to hosts
        local_action: lineinfile 
                dest="./hosts" 
                regexp={{ item.public_ip }} 
                insertafter="[awsnew]" line={{ item.public_ip }}
        with_items: "{{ ec2.instances }}"

      # wait for SSH to be available
      - name: Wait for SSH
        local_action: wait_for 
                host={{ item.public_ip }} 
                port=22 
                state=started
        with_items: "{{ ec2.instances }}"



          
    